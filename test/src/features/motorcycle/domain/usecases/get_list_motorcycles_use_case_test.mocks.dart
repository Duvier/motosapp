// Mocks generated by Mockito 5.4.2 from annotations
// in motosapp/test/src/features/motorcycle/domain/usecases/get_list_motorcycles_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:motosapp/src/features/motorcycle/domain/entities/motorcycle_entity.dart'
    as _i6;
import 'package:motosapp/src/features/motorcycle/domain/repositories/motorcycle_repository.dart'
    as _i3;
import 'package:motosapp/src/features/motorcycle/domain/usecases/params_motorcycle.dart'
    as _i7;
import 'package:motosapp/src/shared/errors/failures.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MotorcycleRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMotorcycleRepository extends _i1.Mock
    implements _i3.MotorcycleRepository {
  MockMotorcycleRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.MotorcycleEntity>>>
      getListMotorcycles() => (super.noSuchMethod(
            Invocation.method(
              #getListMotorcycles,
              [],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure, List<_i6.MotorcycleEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.MotorcycleEntity>>(
              this,
              Invocation.method(
                #getListMotorcycles,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.MotorcycleEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.MotorcycleEntity>> getMotorcycle(
          String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMotorcycle,
          [id],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.MotorcycleEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.MotorcycleEntity>(
          this,
          Invocation.method(
            #getMotorcycle,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.MotorcycleEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> saveMotorcycle(
          _i7.ParamsMotorcycle? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveMotorcycle,
          [params],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #saveMotorcycle,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> deleteMotorcycle(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMotorcycle,
          [id],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #deleteMotorcycle,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);
}
